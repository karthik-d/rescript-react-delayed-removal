// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Post from "./post.bs.js";
import * as Curry from "bs-platform/lib/es6/curry.js";
import * as React from "react";
import * as Belt_Array from "bs-platform/lib/es6/belt_Array.js";

function s(prim) {
  return prim;
}

function reducer(state, action) {
  return state;
}

var initialState = {
  posts: Post.examples,
  forDeletion: undefined
};

function toggleContentType(type_) {
  if (type_) {
    return /* Warning */0;
  } else {
    return /* Excerpt */1;
  }
}

function PostFeed$Warning(Props) {
  var post = Props.post;
  return React.createElement("div", {
              className: "relative bg-yellow-100 px-8 py-4 mb-4 h-40"
            }, React.createElement("p", {
                  className: "text-center white mb-1"
                }, "This post from " + post.title + " by " + post.author + " will be permanently removed in 10 seconds."), React.createElement("div", {
                  className: "flex justify-center"
                }, React.createElement("button", {
                      className: "mr-4 mt-4 bg-yellow-500 hover:bg-yellow-900 text-white py-2 px-4"
                    }, "Restore"), React.createElement("button", {
                      className: "mr-4 mt-4 bg-red-500 hover:bg-red-900 text-white py-2 px-4"
                    }, "Delete Immediately")), React.createElement("div", {
                  className: "bg-red-500 h-2 w-full absolute top-0 left-0 progress"
                }));
}

var Warning = {
  make: PostFeed$Warning
};

function PostFeed$Excerpt(Props) {
  var post = Props.post;
  var removeFunc = Props.removeFunc;
  return React.createElement("div", {
              className: "bg-green-700 hover:bg-green-900 text-gray-300 hover:text-gray-100 px-8 py-4 mb-4"
            }, React.createElement("h2", {
                  className: "text-2xl mb-1"
                }, post.title), React.createElement("h3", {
                  className: "mb-4"
                }, post.author), Belt_Array.map(post.text, (function (cont) {
                    return React.createElement("p", {
                                className: "mb-1 text-sm"
                              }, cont);
                  })), React.createElement("button", {
                  className: "mr-4 mt-4 bg-red-500 hover:bg-red-900 text-white py-2 px-4",
                  onClick: removeFunc
                }, "Remove this post"));
}

var Excerpt = {
  make: PostFeed$Excerpt
};

function showWarning(type_) {
  if (type_) {
    return false;
  } else {
    return true;
  }
}

function PostFeed$Post(Props) {
  var post = Props.post;
  var match = React.useState(function () {
        return /* Excerpt */1;
      });
  var setContent = match[1];
  if (match[0] ? false : true) {
    return React.createElement(PostFeed$Warning, {
                post: post
              });
  } else {
    return React.createElement(PostFeed$Excerpt, {
                post: post,
                removeFunc: (function (param) {
                    return Curry._1(setContent, (function (param) {
                                  return /* Warning */0;
                                }));
                  })
              });
  }
}

var Post$1 = {
  make: PostFeed$Post
};

function PostFeed(Props) {
  var match = React.useReducer(reducer, initialState);
  return React.createElement("div", {
              className: "max-w-3xl mx-auto mt-8 relative"
            }, Belt_Array.map(match[0].posts, (function (postContent) {
                    return React.createElement(PostFeed$Post, {
                                post: postContent,
                                key: postContent.id
                              });
                  })));
}

var make = PostFeed;

export {
  s ,
  reducer ,
  initialState ,
  toggleContentType ,
  Warning ,
  Excerpt ,
  showWarning ,
  Post$1 as Post,
  make ,
  
}
/* Post Not a pure module */
